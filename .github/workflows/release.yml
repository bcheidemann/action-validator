name: Upload release artifacts

on:
  release:
    types: [created]

jobs:
  binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: action-validator_linux_amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: action-validator_darwin_amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: action-validator_linux_arm64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: action-validator_darwin_arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          default: true

      - name: Set Cargo.toml version
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          mv Cargo.toml Cargo.toml.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.toml.orig >Cargo.toml
          mv Cargo.lock Cargo.lock.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.lock.orig >Cargo.lock

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: target/release/action-validator
          asset_name: ${{ matrix.asset_name }}

  crate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true

      - name: Set Cargo.toml version
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          mv Cargo.toml Cargo.toml.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.toml.orig >Cargo.toml
          mv Cargo.lock Cargo.lock.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.lock.orig >Cargo.lock

      - name: Publish crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish --allow-dirty

  npm:
    strategy:
      matrix:
        package-dir:
          - packages/core
          - packages/cli

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Install root dependencies
        run: npm ci

      - name: Build
        if: ${{ matrix.package-dir }} == 'packages/core'
        run: npm run build

      - name: Install package dependencies
        working-directory: ${{ matrix.package-dir }}
        run: npm ci

      - name: Set package.json version
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref }}
        working-directory: ${{ matrix.package-dir }}
        run: |
          mv package.json package.json.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" package.json.orig >package.json
          mv package-lock.json package-lock.json.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" package-lock.json.orig >package-lock.json

      - name: Publish NPM
        run: npm publish --access public
        working-directory: ${{ matrix.package-dir }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
